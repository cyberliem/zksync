# Mnemonic can be generated here: https://bitcoinqrcodegenerator.win/bip39/

MNEMONIC="shoulder moon frost advance toe tribe display grain engine stem curious leopard"
TEST_MNEMONIC="stuff slice staff easily soup parent arm payment cotton trade scatter struggle"

# Set in env file only for local development, for production, staging and testnet it is configured on k8s only.
OPERATOR_PRIVATE_KEY=27593fea79697e947890ecbecce7901b0008345e5d7259710d0dd5e500d040be

# Address to be used for zkSync account managing the interaction with a contract on Ethereum.
# Derived from the `OPERATOR_PRIVATE_KEY`.
OPERATOR_COMMIT_ETH_ADDRESS=0xde03a0B5963f75f1C8485B355fF6D30f3093BDE7

# Address to collect fees to.
# For development purposes, it equals to the `OPERATOR_COMMIT_ETH_ADDRESS`,
# but for production it has to manually be set to an address of an account
# exclusively owned by the node owner.
OPERATOR_FEE_ETH_ADDRESS=0xde03a0B5963f75f1C8485B355fF6D30f3093BDE7

# account stored on the local eth node.
GENESIS_ROOT=0x29b5353c8f72f2050e597f25050c12653fe92c11997b79cb35cb3ac4644c20c6

WEB3_URL=http://52.220.52.16:22001
TICKER_URL=http://localhost:9876

ETHERSCAN_API_KEY=""

# Client
UPGRADE_GATEKEEPER_ADDR=0xB981A219a95727EE6d40A5467C271B2A2B83884F
GOVERNANCE_TARGET_ADDR=0x430d3750e4e2AEFD4d2829A4977958108430F660
VERIFIER_TARGET_ADDR=0x866FC5279219b203118c2d299106c14c290fC600
CONTRACT_TARGET_ADDR=0x4dc9FA964AF759eC241edd10e45ab9E76380798D
CONTRACT_ADDR=0xf049244a14Bc9fC0978544D64eACe2B1b59D4741
GOVERNANCE_ADDR=0xb67597Cd7dccEa87c6532D149aEa47C36435D14A
VERIFIER_ADDR=0x02C6652520074A9Fc1998F28674b089b1017a89A
DEPLOY_FACTORY_ADDR=0x9873A7037eF8a8DaCdf53a6123Ed243904A6e302
GENESIS_TX_HASH=0x7897f58439834ecad1e37e77e68b89c8d5a1a65ad32738b00aafc07fb2c63a47
CHAIN_ID=15
GAS_PRICE_FACTOR=1.5
ETH_NETWORK=evrynet

# Set in env file only for local development, for production, staging and testnet it is configured on k8s only.
DATABASE_URL=postgres://postgres@localhost/plasma

DB_POOL_SIZE=10

# `eth_sender` options

ETH_WAIT_CONFIRMATIONS=1
ETH_EXPECTED_WAIT_TIME_BLOCK=30
# Node polling period in seconds.
ETH_TX_POLL_PERIOD=3
# The maximum amount of simultaneously sent Ethereum transactions.
ETH_MAX_TXS_IN_FLIGHT=3
# Gas price limit to be used by GasAdjuster until the statistics data is gathered.
# Defaults to 400 gwei (400 * 10^9 wei)
ETH_GAS_PRICE_DEFAULT_LIMIT=400000000000
# Interval between updates of the gas price limit (used by GasAdjuster) in seconds
# Defaults to 150 (avg time of 1 block is 15 seconds, thus ~10 ETH blocks)
ETH_GAS_PRICE_LIMIT_UPDATE_INTERVAL=150
# Scale factor for gas price limit (used by GasAdjuster)
# Defaults to 1.5: every time we can increase the price by no more than 50%.
ETH_GAS_PRICE_LIMIT_SCALE_FACTOR=1.5
ETH_IS_ENABLED=true

# Prover options
# Interval values in milliseconds
PROVER_PREPARE_DATA_INTERVAL=500
PROVER_HEARTBEAT_INTERVAL=1000
PROVER_CYCLE_WAIT=500
PROVER_GONE_TIMEOUT=60000

# Download setup files from SETUP_NETWORK_DIR if PROVER_DOWNLOAD_SETUP=1 or use local files if PROVER_DOWNLOAD_SETUP=0
PROVER_DOWNLOAD_SETUP=false
# Network location of setup files
PROVER_SETUP_NETWORK_DIR="-"
# Used to configure env for docker
DOCKER_DUMMY_PROVER=false

REST_API_BIND=0.0.0.0:3001
HTTP_RPC_API_BIND=0.0.0.0:3030
WS_API_BIND=0.0.0.0:3031
RUST_BACKTRACE=1

# DigitalOcean

DO_TOKEN=""

KUBECONFIG=""

# Prover
BELLMAN_VERBOSE=1

# key dir ending with latest version of circuit commit hash
KEY_DIR=keys/plonk-3772d44

# actual supported block chunks sizes by verifier contract (determined by circuit size on setup boundaries)
# and setup powe needed to proof block of this size
SUPPORTED_BLOCK_CHUNKS_SIZES=6,30,74,150,334,678
SUPPORTED_BLOCK_CHUNKS_SIZES_SETUP_POWERS=21,22,23,24,25,26

BLOCK_CHUNK_SIZES=6
ACCOUNT_TREE_DEPTH=32
BALANCE_TREE_DEPTH=11


PROVER_SERVER_URL=http://0.0.0.0:8088
PROVER_SERVER_BIND=0.0.0.0:8088
# Prover container kubernetes resources.(adjust according to BLOCK_CHUNK_SIZES selected)
PROVER_MIN_RESOURCES="{\"requests\": {\"cpu\": 2, \"memory\": \"6Gi\"}}"
# Number of idle provers running (to scale up faster)
IDLE_PROVERS=1

SERVER_API_HOST=localhost
SERVER_API_HOST_CERT=""
EXPLORER_HOST=localhost
EXPLORER_HOST_CERT=""

REQ_SERVER_TIMEOUT=10

REST_API_ADDR=http://localhost:3001
HTTP_RPC_API_ADDR=http://localhost:3030
WS_API_ADDR=ws://localhost:3031

API_REQUESTS_CACHES_SIZE=10000
RUST_LOG=storage=info,server=debug,prover=debug,plasma=info,eth_client=info,data_restore=info,dummy_prover=info,key_generator=info,exodus_test=info,loadtest=info,server_supervisor=info,kube=debug,dev_ticker=info,models=info

# Server container kubernetes resoruces.
SERVER_CONTAINER_RESOURCES="{\"requests\": {\"cpu\": 2, \"memory\": \"500Mi\"}}"

IMAGE_TAG=$(lasthash=$(git rev-parse HEAD) && echo ${lasthash:0:8})
ZKSYNC_ACTION=dont_ask

# ETH watcher configuration
CONFIRMATIONS_FOR_ETH_EVENT=0
# poll interval milliseconds
ETH_WATCH_POLL_INTERVAL=300

# Determines block formation time
MINIBLOCKS_ITERATIONS=50
